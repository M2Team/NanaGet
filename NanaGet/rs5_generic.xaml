<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="using:Windows.UI.Xaml.Controls"
  xmlns:media="using:Windows.UI.Xaml.Media"
  xmlns:primitives="using:Windows.UI.Xaml.Controls.Primitives">
  <Style TargetType="controls:RatingControl">
    <Setter Property="Height" Value="32" />
    <!--  9794813: retire these two properties as customisation points once all resource keys available  -->
    <Setter Property="Foreground" Value="{ThemeResource RatingControlCaptionForeground}" />
    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
    <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
    <Setter Property="ItemInfo" Value="{ThemeResource MUX_RatingControlDefaultFontInfo}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:RatingControl">
          <Grid x:Name="LayoutRoot">
            <StackPanel
              Grid.Row="0"
              Margin="-20,-20,-20,-20"
              Orientation="Horizontal">
              <StackPanel
                x:Name="RatingBackgroundStackPanel"
                Margin="20,20,0,20"
                Background="Transparent"
                Orientation="Horizontal" />
              <TextBlock
                x:Name="Caption"
                Height="32"
                Margin="4,9,20,0"
                VerticalAlignment="Center"
                AutomationProperties.AccessibilityView="Raw"
                AutomationProperties.Name="RatingCaption"
                Foreground="{ThemeResource RatingControlCaptionForeground}"
                IsHitTestVisible="False"
                Style="{ThemeResource CaptionTextBlockStyle}"
                Text="{TemplateBinding Caption}"
                TextLineBounds="TrimToBaseline" />
              <!--  4 = 8 item spacing +4 of magic redline spacing -8 to compensate for scale of the last RatingItem  -->
              <!--
                NB: The redlines say 8px, but it's really 12 px because:
                Designer note: The value between the last glyph and first text character is 12px.
                (There's 4px of whitespace accounted for in the text area in the redline)
              -->
              <!--  TODO MSFT: 9925444 Fix vertical alignment in all text scenarios  -->
            </StackPanel>
            <ContentPresenter
              x:Name="ForegroundContentPresenter"
              Grid.Row="0"
              IsHitTestVisible="False">
              <!--  Margin is on the StackPanel because ContentPresenter clips differently such that moving the reverse margin up won't work  -->
              <StackPanel Margin="-40,-40,-40,-40" Orientation="Horizontal">
                <StackPanel
                  x:Name="RatingForegroundStackPanel"
                  Margin="40,40,40,40"
                  IsHitTestVisible="False"
                  Orientation="Horizontal" />
              </StackPanel>
            </ContentPresenter>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlDisabledSelectedForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Placeholder">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPlaceholderForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverPlaceholder">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPointerOverPlaceholderForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverUnselected">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPointerOverUnselectedForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Set">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlSelectedForeground}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSet">
                  <VisualState.Setters>
                    <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlSelectedForeground}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultColorPickerStyle}" TargetType="controls:ColorPicker" />
  <Style x:Key="DefaultColorPickerStyle" TargetType="controls:ColorPicker">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:ColorPicker">
          <Grid
            x:Name="RootGrid"
            MinWidth="{StaticResource ColorPickerVerticalOrientationMinWidth}"
            MaxWidth="{StaticResource ColorPickerVerticalOrientationMaxWidth}"
            Padding="0,4"
            Background="{TemplateBinding Background}">
            <Grid.Resources>
              <SolidColorBrush x:Name="CheckerColorBrush" Color="{ThemeResource SystemListLowColor}" />
            </Grid.Resources>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid x:Name="ColorSpectrumGrid" Margin="0,0,0,16">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <primitives:ColorSpectrum
                  x:Name="ColorSpectrum"
                  Grid.Row="0"
                  Grid.Column="0"
                  MinWidth="256"
                  MinHeight="256"
                  MaxWidth="336"
                  MaxHeight="336"
                  Components="{TemplateBinding ColorSpectrumComponents}"
                  CornerRadius="{TemplateBinding CornerRadius}"
                  MaxHue="{TemplateBinding MaxHue}"
                  MaxSaturation="{TemplateBinding MaxSaturation}"
                  MaxValue="{TemplateBinding MaxValue}"
                  MinHue="{TemplateBinding MinHue}"
                  MinSaturation="{TemplateBinding MinSaturation}"
                  MinValue="{TemplateBinding MinValue}"
                  Shape="{TemplateBinding ColorSpectrumShape}"
                  TabIndex="0" />
                <Grid
                  x:Name="ColorPreviewRectangleGrid"
                  Grid.Row="0"
                  Grid.Column="1"
                  Width="44"
                  Margin="12,0,0,0">
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Rectangle
                    Grid.RowSpan="2"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Stretch"
                    RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                    RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                    <Rectangle.Fill>
                      <ImageBrush x:Name="ColorPreviewRectangleCheckeredBackgroundImageBrush" />
                    </Rectangle.Fill>
                  </Rectangle>
                  <Rectangle
                    x:Name="ColorPreviewRectangle"
                    Grid.RowSpan="2"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Stretch"
                    RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                    RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                  <Rectangle
                    x:Name="PreviousColorRectangle"
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Stretch"
                    RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                    RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                    Visibility="Collapsed" />
                  <Rectangle
                    x:Name="BorderRectangle"
                    Grid.RowSpan="2"
                    Grid.ColumnSpan="2"
                    RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                    RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                    Style="{StaticResource ColorPickerBorderStyle}" />
                </Grid>
              </Grid>
              <Grid
                x:Name="ThirdDimensionSliderGrid"
                Grid.Row="1"
                Margin="0,0,0,6">
                <Rectangle
                  x:Name="ThirdDimensionBackgroundRectangle"
                  Height="12"
                  VerticalAlignment="Center"
                  RadiusX="{Binding Source={ThemeResource ColorPickerSliderCornerRadius}, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                  RadiusY="{Binding Source={ThemeResource ColorPickerSliderCornerRadius}, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                  RenderTransformOrigin="0.5, 0.5">
                  <Rectangle.Fill>
                    <LinearGradientBrush x:Name="ThirdDimensionSliderGradientBrush" />
                  </Rectangle.Fill>
                </Rectangle>
                <primitives:ColorPickerSlider
                  x:Name="ThirdDimensionSlider"
                  ColorChannel="Value"
                  IsThumbToolTipEnabled="False"
                  Maximum="100"
                  Minimum="0"
                  Orientation="Horizontal"
                  Style="{StaticResource ColorPickerSliderStyle}"
                  TabIndex="1" />
              </Grid>
              <Grid
                x:Name="AlphaSliderGrid"
                Grid.Row="2"
                Margin="0,0,0,16">
                <Rectangle
                  x:Name="AlphaSliderCheckeredBackgroundRectangle"
                  Height="12"
                  VerticalAlignment="Center"
                  RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                  RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                  RenderTransformOrigin="0.5, 0.5">
                  <Rectangle.Fill>
                    <ImageBrush x:Name="AlphaSliderCheckeredBackgroundImageBrush" />
                  </Rectangle.Fill>
                </Rectangle>
                <Rectangle
                  x:Name="AlphaSliderBackgroundRectangle"
                  Height="12"
                  VerticalAlignment="Center"
                  RadiusX="{Binding Source={ThemeResource ColorPickerSliderCornerRadius}, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                  RadiusY="{Binding Source={ThemeResource ColorPickerSliderCornerRadius}, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                  RenderTransformOrigin="0.5, 0.5">
                  <Rectangle.Fill>
                    <LinearGradientBrush x:Name="AlphaSliderGradientBrush" />
                  </Rectangle.Fill>
                </Rectangle>
                <primitives:ColorPickerSlider
                  x:Name="AlphaSlider"
                  ColorChannel="Alpha"
                  IsThumbToolTipEnabled="False"
                  Maximum="100"
                  Minimum="0"
                  Orientation="Horizontal"
                  Style="{StaticResource ColorPickerSliderStyle}"
                  TabIndex="2" />
              </Grid>
              <StackPanel
                x:Name="MoreEntriesPanel"
                Grid.Row="3"
                Margin="0,0,0,12">
                <ToggleButton
                  x:Name="MoreButton"
                  MinWidth="120"
                  MinHeight="32"
                  Padding="0"
                  HorizontalAlignment="Right"
                  HorizontalContentAlignment="Right">
                  <ToggleButton.Content>
                    <StackPanel
                      Margin="0,5,0,7"
                      HorizontalAlignment="Right"
                      Orientation="Horizontal">
                      <TextBlock x:Name="MoreButtonLabel" VerticalAlignment="Center" />
                      <FontIcon
                        x:Name="MoreGlyph"
                        Margin="8,0,0,0"
                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                        FontSize="12"
                        Glyph="&#xE70D;" />
                    </StackPanel>
                  </ToggleButton.Content>
                  <ToggleButton.Resources>
                    <ResourceDictionary>
                      <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Default">
                          <SolidColorBrush x:Key="ToggleButtonBackground" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForeground" Color="{ThemeResource SystemBaseHighColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="{ThemeResource SystemBaseMediumColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundPressed" Color="{ThemeResource SystemBaseMediumLowColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundDisabled" Color="{ThemeResource SystemBaseMediumLowColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundChecked" Color="{ThemeResource SystemBaseHighColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPointerOver" Color="{ThemeResource SystemBaseMediumColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPressed" Color="{ThemeResource SystemBaseMediumLowColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundCheckedDisabled" Color="{ThemeResource SystemBaseMediumLowColor}" />
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="HighContrast">
                          <SolidColorBrush x:Key="ToggleButtonBackground" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="{ThemeResource SystemColorButtonTextColor}" />
                          <SolidColorBrush x:Key="ToggleButtonForeground" Color="{ThemeResource SystemColorButtonTextColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="{ThemeResource SystemColorHighlightColor}" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="{ThemeResource SystemColorHighlightColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushPressed" Color="{ThemeResource SystemColorHighlightColor}" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundPressed" Color="{ThemeResource SystemColorHighlightColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushDisabled" Color="{ThemeResource SystemColorGrayTextColor}" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundDisabled" Color="{ThemeResource SystemColorGrayTextColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="{ThemeResource SystemColorButtonTextColor}" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundChecked" Color="{ThemeResource SystemColorButtonTextColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="{ThemeResource SystemColorHighlightColor}" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPointerOver" Color="{ThemeResource SystemColorHighlightColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="{ThemeResource SystemColorHighlightColor}" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPressed" Color="{ThemeResource SystemColorHighlightColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedDisabled" Color="{ThemeResource SystemColorGrayTextColor}" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundCheckedDisabled" Color="{ThemeResource SystemColorGrayTextColor}" />
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="Light">
                          <SolidColorBrush x:Key="ToggleButtonBackground" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForeground" Color="{ThemeResource SystemBaseHighColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="{ThemeResource SystemBaseMediumColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundPressed" Color="{ThemeResource SystemBaseMediumLowColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundDisabled" Color="{ThemeResource SystemBaseMediumLowColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundChecked" Color="{ThemeResource SystemBaseHighColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPointerOver" Color="{ThemeResource SystemBaseMediumColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPressed" Color="{ThemeResource SystemBaseMediumLowColor}" />
                          <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedDisabled" Color="Transparent" />
                          <SolidColorBrush x:Key="ToggleButtonForegroundCheckedDisabled" Color="{ThemeResource SystemBaseMediumLowColor}" />
                        </ResourceDictionary>
                      </ResourceDictionary.ThemeDictionaries>
                    </ResourceDictionary>
                  </ToggleButton.Resources>
                </ToggleButton>
                <Grid x:Name="TextEntryGrid" Visibility="Collapsed">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <ComboBox
                    x:Name="ColorRepresentationComboBox"
                    Grid.Row="0"
                    Width="120"
                    TabIndex="4">
                    <ComboBoxItem
                      x:Name="RGBComboBoxItem"
                      Content="RGB"
                      IsSelected="True" />
                    <ComboBoxItem x:Name="HSVComboBoxItem" Content="HSV" />
                  </ComboBox>
                  <StackPanel
                    x:Name="ColorTextInputPanels"
                    Grid.Row="1"
                    Grid.ColumnSpan="3">
                    <StackPanel x:Name="ColorChannelTextInputPanel" HorizontalAlignment="Stretch">
                      <Grid x:Name="RgbPanel">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="8" />
                          <ColumnDefinition x:Name="RgbTextLabelColumn" Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition />
                          <RowDefinition />
                          <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox
                          x:Name="RedTextBox"
                          Grid.Row="0"
                          Grid.Column="0"
                          Width="120"
                          Margin="0,12,0,0"
                          MaxLength="3"
                          Text="255" />
                        <TextBlock
                          x:Name="RedLabel"
                          Grid.Row="0"
                          Grid.Column="2"
                          Margin="0,12,0,0"
                          VerticalAlignment="Center"
                          Text="Red" />
                        <TextBox
                          x:Name="GreenTextBox"
                          Grid.Row="1"
                          Grid.Column="0"
                          Width="120"
                          Margin="0,12,0,0"
                          MaxLength="3"
                          Text="255" />
                        <TextBlock
                          x:Name="GreenLabel"
                          Grid.Row="1"
                          Grid.Column="2"
                          Margin="0,12,0,0"
                          VerticalAlignment="Center"
                          Text="Green" />
                        <TextBox
                          x:Name="BlueTextBox"
                          Grid.Row="2"
                          Grid.Column="0"
                          Width="120"
                          Margin="0,12,0,0"
                          MaxLength="3"
                          Text="255" />
                        <TextBlock
                          x:Name="BlueLabel"
                          Grid.Row="2"
                          Grid.Column="2"
                          Margin="0,12,0,0"
                          VerticalAlignment="Center"
                          Text="Blue" />
                      </Grid>
                      <Grid x:Name="HsvPanel" Visibility="Collapsed">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="8" />
                          <ColumnDefinition x:Name="HsvTextLabelColumn" Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition />
                          <RowDefinition />
                          <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox
                          x:Name="HueTextBox"
                          Grid.Row="0"
                          Grid.Column="0"
                          Width="120"
                          Margin="0,12,0,0"
                          MaxLength="3"
                          Text="0" />
                        <TextBlock
                          x:Name="HueLabel"
                          Grid.Row="0"
                          Grid.Column="2"
                          Margin="0,12,0,0"
                          VerticalAlignment="Center"
                          Text="Hue" />
                        <TextBox
                          x:Name="SaturationTextBox"
                          Grid.Row="1"
                          Grid.Column="0"
                          Width="120"
                          Margin="0,12,0,0"
                          MaxLength="3"
                          Text="0" />
                        <TextBlock
                          x:Name="SaturationLabel"
                          Grid.Row="1"
                          Grid.Column="2"
                          Margin="0,12,0,0"
                          VerticalAlignment="Center"
                          Text="Saturation" />
                        <TextBox
                          x:Name="ValueTextBox"
                          Grid.Row="2"
                          Grid.Column="0"
                          Width="120"
                          Margin="0,12,0,0"
                          MaxLength="3"
                          Text="100" />
                        <TextBlock
                          x:Name="ValueLabel"
                          Grid.Row="2"
                          Grid.Column="2"
                          Margin="0,12,0,0"
                          VerticalAlignment="Center"
                          Text="Value" />
                      </Grid>
                    </StackPanel>
                    <Grid x:Name="AlphaPanel" Margin="0,12,0,0">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="8" />
                        <ColumnDefinition x:Name="AlphaTextLabelColumn" Width="*" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <TextBox
                        x:Name="AlphaTextBox"
                        Width="120"
                        MaxLength="4"
                        Text="100%" />
                      <TextBlock
                        x:Name="AlphaLabel"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        Text="Opacity" />
                    </Grid>
                  </StackPanel>
                  <TextBox
                    x:Name="HexTextBox"
                    Grid.Column="2"
                    Width="132"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    MaxLength="7"
                    Text="#FFFFFF" />
                </Grid>
              </StackPanel>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ColorSpectrumVisibility">
                <VisualState x:Name="ColorSpectrumVisible" />
                <VisualState x:Name="ColorSpectrumCollapsed">
                  <VisualState.Setters>
                    <Setter Target="ColorSpectrum.Visibility" Value="Collapsed" />
                    <Setter Target="ColorPreviewRectangleGrid.Width" Value="NaN" />
                    <Setter Target="ColorPreviewRectangleGrid.Height" Value="44" />
                    <Setter Target="ColorPreviewRectangleGrid.Margin" Value="0" />
                    <Setter Target="ColorPreviewRectangleGrid.(Grid.Column)" Value="0" />
                    <Setter Target="ColorPreviewRectangleGrid.(Grid.ColumnSpan)" Value="2" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ColorPreviewVisibility">
                <VisualState x:Name="ColorPreviewVisible" />
                <VisualState x:Name="ColorPreviewCollapsed">
                  <VisualState.Setters>
                    <Setter Target="ColorPreviewRectangleGrid.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PreviousColorVisibility">
                <VisualState x:Name="PreviousColorCollapsedVertical" />
                <VisualState x:Name="PreviousColorVisibleVertical">
                  <VisualState.Setters>
                    <Setter Target="ColorPreviewRectangle.(Grid.RowSpan)" Value="1" />
                    <Setter Target="PreviousColorRectangle.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PreviousColorCollapsedHorizontal">
                  <VisualState.Setters>
                    <Setter Target="PreviousColorRectangle.(Grid.Row)" Value="0" />
                    <Setter Target="PreviousColorRectangle.(Grid.Column)" Value="1" />
                    <Setter Target="PreviousColorRectangle.(Grid.RowSpan)" Value="2" />
                    <Setter Target="PreviousColorRectangle.(Grid.ColumnSpan)" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PreviousColorVisibleHorizontal">
                  <VisualState.Setters>
                    <Setter Target="ColorPreviewRectangle.(Grid.ColumnSpan)" Value="1" />
                    <Setter Target="PreviousColorRectangle.Visibility" Value="Visible" />
                    <Setter Target="PreviousColorRectangle.(Grid.Row)" Value="0" />
                    <Setter Target="PreviousColorRectangle.(Grid.Column)" Value="1" />
                    <Setter Target="PreviousColorRectangle.(Grid.RowSpan)" Value="2" />
                    <Setter Target="PreviousColorRectangle.(Grid.ColumnSpan)" Value="1" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ThirdDimensionSliderVisibility">
                <VisualState x:Name="ThirdDimensionSliderVisible" />
                <VisualState x:Name="ThirdDimensionSliderCollapsed">
                  <VisualState.Setters>
                    <Setter Target="ThirdDimensionSliderGrid.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AlphaSliderVisibility">
                <VisualState x:Name="AlphaSliderVisible" />
                <VisualState x:Name="AlphaSliderCollapsed">
                  <VisualState.Setters>
                    <Setter Target="AlphaSliderGrid.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="MoreButtonVisibility">
                <VisualState x:Name="MoreButtonVisible" />
                <VisualState x:Name="MoreButtonCollapsed">
                  <VisualState.Setters>
                    <Setter Target="MoreButton.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TextEntryGridVisibility">
                <VisualState x:Name="TextEntryGridCollapsed" />
                <VisualState x:Name="TextEntryGridVisible">
                  <VisualState.Setters>
                    <Setter Target="TextEntryGrid.Visibility" Value="Visible" />
                    <Setter Target="MoreGlyph.Glyph" Value="&#xE70E;" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ColorChannelTextInputVisibility">
                <VisualState x:Name="ColorChannelTextInputVisible" />
                <VisualState x:Name="ColorChannelTextInputCollapsed">
                  <VisualState.Setters>
                    <Setter Target="ColorRepresentationComboBox.Visibility" Value="Collapsed" />
                    <Setter Target="ColorChannelTextInputPanel.Visibility" Value="Collapsed" />
                    <Setter Target="HexTextBox.(Grid.Column)" Value="0" />
                    <Setter Target="HexTextBox.HorizontalAlignment" Value="Left" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AlphaTextInputVisibility">
                <VisualState x:Name="AlphaTextInputVisible" />
                <VisualState x:Name="AlphaTextInputCollapsed">
                  <VisualState.Setters>
                    <Setter Target="AlphaPanel.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ColorRepresentationSelected">
                <VisualState x:Name="RgbSelected" />
                <VisualState x:Name="HsvSelected">
                  <VisualState.Setters>
                    <Setter Target="RgbPanel.Visibility" Value="Collapsed" />
                    <Setter Target="HsvPanel.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HexInputVisibility">
                <VisualState x:Name="HexInputVisible" />
                <VisualState x:Name="HexInputCollapsed">
                  <VisualState.Setters>
                    <Setter Target="HexTextBox.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AlphaEnabledState">
                <VisualState x:Name="AlphaDisabled" />
                <VisualState x:Name="AlphaEnabled">
                  <VisualState.Setters>
                    <Setter Target="HexTextBox.MaxLength" Value="9" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="Orientation">
                <VisualState x:Name="Vertical" />
                <VisualState x:Name="Horizontal">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.MinHeight" Value="{StaticResource ColorPickerVerticalOrientationMinHeight}" />
                    <Setter Target="RootGrid.MaxHeight" Value="{StaticResource ColorPickerVerticalOrientationMaxHeight}" />
                    <Setter Target="RootGrid.MinWidth" Value="0" />
                    <Setter Target="RootGrid.MaxWidth" Value="10000" />
                    <Setter Target="ColorSpectrumGrid.Margin" Value="0" />
                    <Setter Target="ColorPreviewRectangleGrid.Margin" Value="12,0,16,0" />
                    <Setter Target="ThirdDimensionSliderGrid.(Grid.Column)" Value="1" />
                    <Setter Target="ThirdDimensionSliderGrid.(Grid.Row)" Value="0" />
                    <Setter Target="ThirdDimensionSliderGrid.Margin" Value="0,0,6,0" />
                    <Setter Target="ThirdDimensionSlider.Orientation" Value="Vertical" />
                    <Setter Target="ThirdDimensionBackgroundRectangle.Height" Value="Auto" />
                    <Setter Target="ThirdDimensionBackgroundRectangle.Width" Value="12" />
                    <Setter Target="ThirdDimensionBackgroundRectangle.HorizontalAlignment" Value="Center" />
                    <Setter Target="ThirdDimensionBackgroundRectangle.VerticalAlignment" Value="Stretch" />
                    <Setter Target="ThirdDimensionBackgroundRectangle.RenderTransform">
                      <Setter.Value>
                        <RotateTransform Angle="180" />
                      </Setter.Value>
                    </Setter>
                    <Setter Target="AlphaSliderGrid.(Grid.Column)" Value="2" />
                    <Setter Target="AlphaSliderGrid.(Grid.Row)" Value="0" />
                    <Setter Target="AlphaSliderGrid.Margin" Value="0,0,16,0" />
                    <Setter Target="AlphaSlider.Orientation" Value="Vertical" />
                    <Setter Target="AlphaSliderCheckeredBackgroundRectangle.Height" Value="Auto" />
                    <Setter Target="AlphaSliderCheckeredBackgroundRectangle.Width" Value="12" />
                    <Setter Target="AlphaSliderCheckeredBackgroundRectangle.HorizontalAlignment" Value="Center" />
                    <Setter Target="AlphaSliderCheckeredBackgroundRectangle.VerticalAlignment" Value="Stretch" />
                    <Setter Target="AlphaSliderBackgroundRectangle.Height" Value="Auto" />
                    <Setter Target="AlphaSliderBackgroundRectangle.Width" Value="12" />
                    <Setter Target="AlphaSliderBackgroundRectangle.HorizontalAlignment" Value="Center" />
                    <Setter Target="AlphaSliderBackgroundRectangle.VerticalAlignment" Value="Stretch" />
                    <Setter Target="AlphaSliderBackgroundRectangle.RenderTransform">
                      <Setter.Value>
                        <RotateTransform Angle="180" />
                      </Setter.Value>
                    </Setter>
                    <Setter Target="MoreEntriesPanel.(Grid.Column)" Value="3" />
                    <Setter Target="MoreEntriesPanel.(Grid.Row)" Value="0" />
                    <Setter Target="MoreEntriesPanel.Margin" Value="0" />
                    <Setter Target="MoreButton.Margin" Value="0" />
                    <Setter Target="ColorRepresentationComboBox.(Grid.Row)" Value="1" />
                    <Setter Target="ColorTextInputPanels.(Grid.Row)" Value="2" />
                    <Setter Target="HexTextBox.TabIndex" Value="3" />
                    <Setter Target="HexTextBox.(Grid.Row)" Value="0" />
                    <Setter Target="HexTextBox.(Grid.Column)" Value="0" />
                    <Setter Target="HexTextBox.(Grid.ColumnSpan)" Value="3" />
                    <Setter Target="HexTextBox.Margin" Value="0,0,0,12" />
                    <Setter Target="HexTextBox.HorizontalAlignment" Value="Left" />
                    <Setter Target="HexTextBox.Width" Value="120" />
                    <Setter Target="RgbTextLabelColumn.Width" Value="{ThemeResource ColorPickerTextInputHorizontalOrientationMargin}" />
                    <Setter Target="HsvTextLabelColumn.Width" Value="{ThemeResource ColorPickerTextInputHorizontalOrientationMargin}" />
                    <Setter Target="AlphaTextLabelColumn.Width" Value="{ThemeResource ColorPickerTextInputHorizontalOrientationMargin}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColorPickerSliderStyle" TargetType="primitives:ColorPickerSlider">
    <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Slider">
          <Grid>
            <Grid.Resources>
              <Style x:Key="SliderThumbStyle" TargetType="Thumb">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="{ThemeResource ColorPickerSliderThumbBackground}" />
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                      <Border
                        Background="{ThemeResource SliderOuterThumbBackground}"
                        BorderBrush="{ThemeResource SliderThumbBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{ThemeResource SliderThumbCornerRadius}">
                        <Ellipse
                          x:Name="SliderInnerThumb"
                          Width="{ThemeResource ColorPickerSliderInnerThumbWidth}"
                          Height="{ThemeResource ColorPickerSliderInnerThumbHeight}"
                          Fill="{TemplateBinding Background}" />
                      </Border>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ContentPresenter
              x:Name="HeaderContentPresenter"
              Margin="{ThemeResource SliderHeaderThemeMargin}"
              x:DeferLoadStrategy="Lazy"
              Content="{TemplateBinding Header}"
              ContentTemplate="{TemplateBinding HeaderTemplate}"
              FontWeight="{ThemeResource SliderHeaderThemeFontWeight}"
              Foreground="{ThemeResource SliderHeaderForeground}"
              TextWrapping="Wrap"
              Visibility="Collapsed" />
            <Grid
              x:Name="SliderContainer"
              Grid.Row="1"
              Background="Transparent"
              Control.IsTemplateFocusTarget="True"
              CornerRadius="{TemplateBinding CornerRadius}">
              <Grid x:Name="HorizontalTemplate" MinHeight="32">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="{ThemeResource SliderPreContentMargin}" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="{ThemeResource SliderPostContentMargin}" />
                </Grid.RowDefinitions>
                <Rectangle
                  x:Name="HorizontalTrackRect"
                  Grid.Row="1"
                  Grid.ColumnSpan="3"
                  Height="{ThemeResource SliderTrackThemeHeight}"
                  Fill="Transparent"
                  Opacity="0"
                  RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                  RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                <Rectangle
                  x:Name="HorizontalDecreaseRect"
                  Grid.Row="1"
                  Fill="Transparent"
                  Opacity="0" />
                <Thumb
                  x:Name="HorizontalThumb"
                  Grid.Row="0"
                  Grid.RowSpan="3"
                  Grid.Column="1"
                  Width="{ThemeResource SliderHorizontalThumbWidth}"
                  Height="{ThemeResource SliderHorizontalThumbHeight}"
                  AutomationProperties.AccessibilityView="Raw"
                  DataContext="{TemplateBinding Value}"
                  Style="{StaticResource SliderThumbStyle}">
                  <ToolTipService.ToolTip>
                    <ToolTip x:Name="ToolTip" VerticalOffset="20" />
                  </ToolTipService.ToolTip>
                </Thumb>
              </Grid>
              <Grid x:Name="VerticalTemplate" MinWidth="32">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="{ThemeResource SliderPreContentMargin}" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="{ThemeResource SliderPostContentMargin}" />
                </Grid.ColumnDefinitions>
                <Rectangle
                  x:Name="VerticalTrackRect"
                  Grid.RowSpan="3"
                  Grid.Column="1"
                  Width="{ThemeResource SliderTrackThemeHeight}"
                  Fill="Transparent"
                  Opacity="0"
                  RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                  RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                <Rectangle
                  x:Name="VerticalDecreaseRect"
                  Grid.Row="2"
                  Grid.Column="1"
                  Fill="Transparent"
                  Opacity="0" />
                <Thumb
                  x:Name="VerticalThumb"
                  Grid.Row="1"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Width="{ThemeResource SliderHorizontalThumbWidth}"
                  Height="{ThemeResource SliderHorizontalThumbHeight}"
                  AutomationProperties.AccessibilityView="Raw"
                  DataContext="{TemplateBinding Value}"
                  Style="{StaticResource SliderThumbStyle}">
                  <ToolTipService.ToolTip>
                    <ToolTip x:Name="VerticalToolTip" VerticalOffset="20" />
                  </ToolTipService.ToolTip>
                </Thumb>
              </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="HorizontalThumb.Background" Value="{ThemeResource ColorPickerSliderThumbBackgroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="HeaderContentPresenter.Foreground" Value="{ThemeResource ColorPickerHeaderContentDisabled}" />
                    <Setter Target="HorizontalThumb.Background" Value="{ThemeResource ColorPickerSliderThumbBackgroundDisabled}" />
                    <Setter Target="HorizontalTrackRect.Fill" Value="{ThemeResource ColorPickerSliderTrackFillDisabled}" />
                    <Setter Target="HorizontalDecreaseRect.Fill" Value="{ThemeResource ColorPickerSliderTrackFillDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="HorizontalThumb.Background" Value="{ThemeResource ColorPickerSliderThumbBackgroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusEngagementStates">
                <VisualState x:Name="FocusDisengaged" />
                <VisualState x:Name="FocusEngagedHorizontal">
                  <VisualState.Setters>
                    <Setter Target="SliderContainer.(Control.IsTemplateFocusTarget)" Value="False" />
                    <Setter Target="HorizontalThumb.(Control.IsTemplateFocusTarget)" Value="True" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FocusEngagedVertical">
                  <VisualState.Setters>
                    <Setter Target="SliderContainer.(Control.IsTemplateFocusTarget)" Value="False" />
                    <Setter Target="VerticalThumb.(Control.IsTemplateFocusTarget)" Value="True" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="primitives:ColorSpectrum">
    <Setter Property="ManipulationMode" Value="None" />
    <Setter Property="UseSystemFocusVisuals" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="primitives:ColorSpectrum">
          <Grid x:Name="LayoutRoot">
            <Grid
              x:Name="SizingGrid"
              HorizontalAlignment="Center"
              VerticalAlignment="Center">
              <Grid.Clip>
                <RectangleGeometry />
              </Grid.Clip>
              <Rectangle
                x:Name="SpectrumRectangle"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsHitTestVisible="False"
                RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
              <Rectangle
                x:Name="SpectrumOverlayRectangle"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsHitTestVisible="False"
                RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
              <Ellipse
                x:Name="SpectrumEllipse"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsHitTestVisible="False"
                Visibility="Collapsed" />
              <Ellipse
                x:Name="SpectrumOverlayEllipse"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsHitTestVisible="False"
                Visibility="Collapsed" />
              <Canvas
                x:Name="InputTarget"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                Control.IsTemplateFocusTarget="True">
                <Grid
                  x:Name="SelectionEllipsePanel"
                  Width="16"
                  Height="16">
                  <Ellipse
                    x:Name="FocusEllipse"
                    Margin="-2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    IsHitTestVisible="False"
                    Stroke="{ThemeResource SystemControlBackgroundChromeBlackHighBrush}"
                    StrokeThickness="2"
                    Visibility="Collapsed" />
                  <Ellipse
                    x:Name="SelectionEllipse"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    IsHitTestVisible="False"
                    Stroke="{ThemeResource SystemControlBackgroundChromeWhiteBrush}"
                    StrokeThickness="2">
                    <ToolTipService.ToolTip>
                      <ToolTip x:Name="ColorNameToolTip" VerticalOffset="20" />
                    </ToolTipService.ToolTip>
                  </Ellipse>
                </Grid>
              </Canvas>
              <Rectangle
                x:Name="RectangleBorder"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsHitTestVisible="False"
                RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                Style="{StaticResource ColorPickerBorderStyle}" />
              <Ellipse
                x:Name="EllipseBorder"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsHitTestVisible="False"
                Style="{StaticResource ColorPickerBorderStyle}"
                Visibility="Collapsed" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="SelectionEllipse.Opacity" Value="0.8" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="PressedLarge">
                  <VisualState.Setters>
                    <Setter Target="SelectionEllipsePanel.Width" Value="48" />
                    <Setter Target="SelectionEllipsePanel.Height" Value="48" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionEllipseColor">
                <VisualState x:Name="SelectionEllipseLight" />
                <VisualState x:Name="SelectionEllipseDark">
                  <VisualState.Setters>
                    <Setter Target="FocusEllipse.Stroke" Value="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" />
                    <Setter Target="SelectionEllipse.Stroke" Value="{ThemeResource SystemControlBackgroundChromeBlackHighBrush}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ShapeSelected">
                <VisualState x:Name="BoxSelected" />
                <VisualState x:Name="RingSelected">
                  <VisualState.Setters>
                    <Setter Target="SpectrumRectangle.Visibility" Value="Collapsed" />
                    <Setter Target="SpectrumOverlayRectangle.Visibility" Value="Collapsed" />
                    <Setter Target="RectangleBorder.Visibility" Value="Collapsed" />
                    <Setter Target="SpectrumEllipse.Visibility" Value="Visible" />
                    <Setter Target="SpectrumOverlayEllipse.Visibility" Value="Visible" />
                    <Setter Target="EllipseBorder.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusEllipse.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerFocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultPersonPictureStyle}" TargetType="controls:PersonPicture" />
  <Style x:Key="DefaultPersonPictureStyle" TargetType="controls:PersonPicture">
    <Setter Property="Foreground" Value="{ThemeResource PersonPictureForegroundThemeBrush}" />
    <Setter Property="Width" Value="96" />
    <Setter Property="Height" Value="96" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:PersonPicture">
          <Grid x:Name="RootGrid">
            <Ellipse
              Width="{TemplateBinding Width}"
              Height="{TemplateBinding Height}"
              Fill="{ThemeResource PersonPictureEllipseFillThemeBrush}"
              Stroke="{ThemeResource PersonPictureEllipseFillStrokeBrush}"
              StrokeThickness="{ThemeResource PersonPictureEllipseStrokeThickness}" />
            <TextBlock
              x:Name="InitialsTextBlock"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              AutomationProperties.AccessibilityView="Raw"
              FontFamily="{TemplateBinding FontFamily}"
              FontSize="40"
              FontWeight="{TemplateBinding FontWeight}"
              Foreground="{TemplateBinding Foreground}"
              IsTextScaleFactorEnabled="False"
              Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ActualInitials}"
              TextLineBounds="Tight" />
            <Ellipse
              x:Name="PersonPictureEllipse"
              Width="{TemplateBinding Width}"
              Height="{TemplateBinding Height}"
              x:DeferLoadStrategy="Lazy"
              FlowDirection="LeftToRight" />
            <Grid
              x:Name="BadgeGrid"
              Margin="{ThemeResource PersonPictureBadgeGridMargin}"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              Visibility="Collapsed">
              <Ellipse
                x:Name="BadgingBackgroundEllipse"
                x:DeferLoadStrategy="Lazy"
                Fill="{ThemeResource PersonPictureEllipseBadgeFillThemeBrush}"
                Opacity="{ThemeResource PersonPictureEllipseBadgeStrokeOpacity}"
                Stroke="{ThemeResource PersonPictureEllipseBadgeStrokeThemeBrush}"
                StrokeThickness="{ThemeResource PersonPictureEllipseBadgeStrokeThickness}" />
              <Ellipse
                x:Name="BadgingEllipse"
                x:DeferLoadStrategy="Lazy"
                FlowDirection="LeftToRight"
                Opacity="0" />
              <TextBlock
                x:Name="BadgeNumberTextBlock"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                x:DeferLoadStrategy="Lazy"
                AutomationProperties.AccessibilityView="Raw"
                FontFamily="{TemplateBinding FontFamily}"
                FontWeight="{TemplateBinding FontWeight}"
                Foreground="{ThemeResource PersonPictureEllipseBadgeForegroundThemeBrush}"
                IsTextScaleFactorEnabled="False"
                TextLineBounds="Tight" />
              <!--  Default font family to "Segoe MDL2 Assets"  -->
              <FontIcon
                x:Name="BadgeGlyphIcon"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                x:DeferLoadStrategy="Lazy"
                AutomationProperties.AccessibilityView="Raw"
                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                FontWeight="{TemplateBinding FontWeight}"
                Foreground="{ThemeResource PersonPictureEllipseBadgeForegroundThemeBrush}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <!--  Visual State when a Photo is available for display  -->
                <VisualState x:Name="Photo">
                  <VisualState.Setters>
                    <Setter Target="PersonPictureEllipse.Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ActualImageBrush}" />
                  </VisualState.Setters>
                </VisualState>
                <!--  Visual State when no Photo is available (but there are initials).  -->
                <VisualState x:Name="Initials" />
                <VisualState x:Name="NoPhotoOrInitials">
                  <VisualState.Setters>
                    <Setter Target="InitialsTextBlock.FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
                    <!--  Placeholder symbol for 'Contact' (https://docs.microsoft.com/en-us/windows/uwp/design/style/segoe-ui-symbol-font)  -->
                    <Setter Target="InitialsTextBlock.Text" Value="&#xE77B;" />
                  </VisualState.Setters>
                </VisualState>
                <!--  Visual State when in Group mode  -->
                <VisualState x:Name="Group">
                  <VisualState.Setters>
                    <Setter Target="InitialsTextBlock.FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
                    <!--  Placeholder symbol for 'People' (https://docs.microsoft.com/en-us/windows/uwp/design/style/segoe-ui-symbol-font)  -->
                    <Setter Target="InitialsTextBlock.Text" Value="&#xE716;" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="BadgeStates">
                <VisualState x:Name="NoBadge" />
                <VisualState x:Name="BadgeWithoutImageSource">
                  <VisualState.Setters>
                    <Setter Target="BadgeGrid.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="BadgeWithImageSource">
                  <VisualState.Setters>
                    <Setter Target="BadgeGrid.Visibility" Value="Visible" />
                    <Setter Target="BadgingEllipse.Opacity" Value="{ThemeResource PersonPictureEllipseBadgeImageSourceStrokeOpacity}" />
                    <Setter Target="BadgingEllipse.Fill">
                      <Setter.Value>
                        <ImageBrush x:Name="BadgeImageBrush" Stretch="UniformToFill" />
                      </Setter.Value>
                    </Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultRefreshContainerStyle}" TargetType="controls:RefreshContainer" />
  <Style x:Key="DefaultRefreshContainerStyle" TargetType="controls:RefreshContainer">
    <Setter Property="Foreground" Value="{ThemeResource RefreshContainerForegroundBrush}" />
    <Setter Property="Background" Value="{ThemeResource RefreshContainerBackgroundBrush}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:RefreshContainer">
          <Grid x:Name="Root" Background="{TemplateBinding Background}">
            <ContentPresenter
              x:Name="ContentPresenter"
              Background="Transparent"
              Content="{TemplateBinding Content}" />
            <Grid x:Name="RefreshVisualizerPresenter" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="controls:RefreshVisualizer">
    <Setter Property="Background" Value="{ThemeResource RefreshVisualizerBackground}" />
    <Setter Property="Foreground" Value="{ThemeResource RefreshVisualizerForeground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Height" Value="100" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:RefreshVisualizer">
          <Grid
            x:Name="Root"
            MinHeight="80"
            Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultMenuBarStyle}" TargetType="controls:MenuBar" />
  <Style x:Key="DefaultMenuBarStyle" TargetType="controls:MenuBar">
    <Setter Property="Background" Value="{ThemeResource MenuBarBackground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Height" Value="{StaticResource MenuBarHeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:MenuBar">
          <Grid
            x:Name="LayoutRoot"
            HorizontalAlignment="Stretch"
            Background="{TemplateBinding Background}">
            <ItemsControl
              x:Name="ContentRoot"
              HorizontalAlignment="Left"
              VerticalAlignment="Stretch"
              IsTabStop="False">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
            </ItemsControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="controls:MenuBarItem">
    <Setter Property="Background" Value="{ThemeResource MenuBarItemBackground}" />
    <Setter Property="BorderThickness" Value="{ThemeResource MenuBarItemBorderThickness}" />
    <Setter Property="BorderBrush" Value="{ThemeResource MenuBarItemBorderBrush}" />
    <Setter Property="Margin" Value="{ThemeResource MenuBarItemMargin}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Title" Value="Item" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="ExitDisplayModeOnAccessKeyInvoked" Value="False" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:MenuBarItem">
          <Grid
            x:Name="ContentRoot"
            Background="{TemplateBinding Background}"
            CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.Resources>
              <!--  Stop the contained button from setting its background to anything but transparent  -->
              <!--  Can't do this because of : Bug 16889199: StaticResource tag in a ControlTemplate hits asserts in CHK build  -->
              <!--<StaticResource x:Key="ButtonBackground" ResourceKey="SystemControlTransparentBrush"/>
                            <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush"/>
                            <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="SystemControlTransparentBrush"/>
                            <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush"/>-->
              <!--  Use SolidColorBrush instead for now.  -->
              <SolidColorBrush x:Key="ButtonBackground" Color="Transparent" />
              <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="Transparent" />
              <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent" />
              <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
            </Grid.Resources>
            <Border
              x:Name="Background"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" />
            <Button
              x:Name="ContentButton"
              Padding="{StaticResource MenuBarItemButtonPadding}"
              VerticalAlignment="Stretch"
              AutomationProperties.AccessibilityView="Raw"
              Background="Transparent"
              BorderThickness="0"
              Content="{TemplateBinding Title}"
              IsTabStop="False" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Background.Background" Value="{ThemeResource MenuBarItemBackgroundPointerOver}" />
                    <Setter Target="Background.BorderBrush" Value="{ThemeResource MenuBarItemBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="Background.Background" Value="{ThemeResource MenuBarItemBackgroundPressed}" />
                    <Setter Target="Background.BorderBrush" Value="{ThemeResource MenuBarItemBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="Background.Background" Value="{ThemeResource MenuBarItemBackgroundSelected}" />
                    <Setter Target="Background.BorderBrush" Value="{ThemeResource MenuBarItemBorderBrushSelected}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="TreeViewItemDataTemplate">
    <Grid Height="44">
      <TextBlock
        HorizontalAlignment="Left"
        VerticalAlignment="Center"
        Style="{ThemeResource BodyTextBlockStyle}"
        Text="{Binding Content}" />
    </Grid>
  </DataTemplate>
  <Style BasedOn="{StaticResource DefaultTreeViewStyle}" TargetType="controls:TreeView" />
  <Style x:Key="DefaultTreeViewStyle" TargetType="controls:TreeView">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="CanDragItems" Value="True" />
    <Setter Property="CanReorderItems" Value="True" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="ItemContainerTransitions">
      <Setter.Value>
        <TransitionCollection>
          <ContentThemeTransition />
          <ReorderThemeTransition />
          <EntranceThemeTransition IsStaggeringEnabled="False" />
        </TransitionCollection>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:TreeView">
          <controls:TreeViewList
            x:Name="ListControl"
            AllowDrop="{TemplateBinding AllowDrop}"
            Background="{TemplateBinding Background}"
            CanDragItems="{TemplateBinding CanDragItems}"
            CanReorderItems="{TemplateBinding CanReorderItems}"
            ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
            ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
            ItemContainerTransitions="{TemplateBinding ItemContainerTransitions}"
            ItemTemplate="{TemplateBinding ItemTemplate}"
            ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource MUX_TreeViewItemStyle}" TargetType="controls:TreeViewItem" />
  <Style x:Key="DefaultSwipeControlStyle" TargetType="controls:SwipeControl">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
    <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:SwipeControl">
          <Grid x:Name="RootGrid">
            <Grid x:Name="SwipeContentRoot">
              <StackPanel x:Name="SwipeContentStackPanel" />
            </Grid>
            <Grid x:Name="ContentRoot">
              <ContentPresenter
                x:Name="ContentPresenter"
                Padding="{TemplateBinding Padding}"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                AutomationProperties.AccessibilityView="Raw"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                ContentTransitions="{TemplateBinding ContentTransitions}"
                CornerRadius="{TemplateBinding CornerRadius}" />
              <Grid x:Name="InputEater" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultSwipeControlStyle}" TargetType="controls:SwipeControl" />
  <Style x:Key="DefaultTwoPaneViewStyle" TargetType="controls:TwoPaneView">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="MinWideModeWidth" Value="641" />
    <Setter Property="MinTallModeHeight" Value="641" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:TwoPaneView">
          <Grid
            x:Name="RootGrid"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="PART_ColumnLeft" Width="Auto" />
              <ColumnDefinition x:Name="PART_ColumnMiddle" Width="0" />
              <ColumnDefinition x:Name="PART_ColumnRight" Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="PART_RowTop" Height="*" />
              <RowDefinition x:Name="PART_RowMiddle" Height="0" />
              <RowDefinition x:Name="PART_RowBottom" Height="0" />
            </Grid.RowDefinitions>
            <ScrollViewer
              x:Name="PART_Pane1ScrollViewer"
              Grid.Column="0"
              VerticalScrollBarVisibility="Auto">
              <Border Child="{TemplateBinding Pane1}" />
            </ScrollViewer>
            <ScrollViewer
              x:Name="PART_Pane2ScrollViewer"
              Grid.Column="2"
              VerticalScrollBarVisibility="Auto">
              <Border Child="{TemplateBinding Pane2}" />
            </ScrollViewer>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ModeStates">
                <VisualState x:Name="ViewMode_LeftRight" />
                <VisualState x:Name="ViewMode_RightLeft">
                  <VisualState.Setters>
                    <Setter Target="PART_Pane1ScrollViewer.(Grid.Column)" Value="2" />
                    <Setter Target="PART_Pane2ScrollViewer.(Grid.Column)" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ViewMode_TopBottom">
                  <VisualState.Setters>
                    <Setter Target="PART_Pane1ScrollViewer.(Grid.Column)" Value="0" />
                    <Setter Target="PART_Pane1ScrollViewer.(Grid.Row)" Value="0" />
                    <Setter Target="PART_Pane2ScrollViewer.(Grid.Column)" Value="0" />
                    <Setter Target="PART_Pane2ScrollViewer.(Grid.Row)" Value="2" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ViewMode_BottomTop">
                  <VisualState.Setters>
                    <Setter Target="PART_Pane1ScrollViewer.(Grid.Column)" Value="0" />
                    <Setter Target="PART_Pane1ScrollViewer.(Grid.Row)" Value="2" />
                    <Setter Target="PART_Pane2ScrollViewer.(Grid.Column)" Value="0" />
                    <Setter Target="PART_Pane2ScrollViewer.(Grid.Row)" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ViewMode_OneOnly">
                  <VisualState.Setters>
                    <Setter Target="PART_Pane2ScrollViewer.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ViewMode_TwoOnly">
                  <VisualState.Setters>
                    <Setter Target="PART_Pane1ScrollViewer.Visibility" Value="Collapsed" />
                    <Setter Target="PART_Pane2ScrollViewer.(Grid.Column)" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultTwoPaneViewStyle}" TargetType="controls:TwoPaneView" />
  <Style BasedOn="{StaticResource DefaultCommandBarFlyoutCommandBarStyle}" TargetType="primitives:CommandBarFlyoutCommandBar" />
  <Style
    x:Key="MUX_TreeViewItemStyle"
    BasedOn="{StaticResource DefaultListViewItemStyle}"
    TargetType="controls:TreeViewItem">
    <Setter Property="Padding" Value="0" />
    <Setter Property="Background" Value="{ThemeResource TreeViewItemBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource TreeViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{ThemeResource TreeViewItemBorderThemeThickness}" />
    <Setter Property="GlyphBrush" Value="{ThemeResource TreeViewItemForeground}" />
    <Setter Property="MinHeight" Value="{ThemeResource TreeViewItemMinHeight}" />
    <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:TreeViewItem">
          <Grid
            x:Name="ContentPresenterGrid"
            Margin="{ThemeResource TreeViewItemPresenterMargin}"
            Padding="{ThemeResource TreeViewItemPresenterPadding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}">
            <Rectangle
              x:Name="SelectionIndicator"
              Width="3"
              Height="16"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Fill="{ThemeResource TreeViewItemSelectionIndicatorForeground}"
              Opacity="0"
              RadiusX="2"
              RadiusY="2" />
            <Grid x:Name="MultiSelectGrid" Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.Indentation}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Grid Grid.Column="0">
                <CheckBox
                  x:Name="MultiSelectCheckBox"
                  Width="32"
                  MinWidth="32"
                  MinHeight="{ThemeResource TreeViewItemMultiSelectCheckBoxMinHeight}"
                  Margin="10,0,0,0"
                  VerticalAlignment="Center"
                  AutomationProperties.AccessibilityView="Raw"
                  IsTabStop="False"
                  Visibility="Collapsed" />
                <Border
                  x:Name="MultiArrangeOverlayTextBorder"
                  Height="20"
                  MinWidth="20"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                  BorderBrush="{ThemeResource SystemControlBackgroundChromeWhiteBrush}"
                  BorderThickness="1"
                  CornerRadius="{ThemeResource ControlCornerRadius}"
                  IsHitTestVisible="False"
                  Visibility="Collapsed">
                  <TextBlock
                    x:Name="MultiArrangeOverlayText"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    AutomationProperties.AccessibilityView="Raw"
                    Foreground="{ThemeResource SystemControlForegroundChromeWhiteBrush}"
                    IsHitTestVisible="False"
                    Style="{ThemeResource CaptionTextBlockStyle}"
                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.DragItemsCount}" />
                </Border>
              </Grid>
              <Grid
                x:Name="ExpandCollapseChevron"
                Grid.Column="1"
                Width="Auto"
                Padding="14,0"
                Background="Transparent"
                Opacity="{TemplateBinding GlyphOpacity}">
                <TextBlock
                  Width="12"
                  Height="12"
                  Padding="2"
                  VerticalAlignment="Center"
                  AutomationProperties.AccessibilityView="Raw"
                  FontFamily="{StaticResource SymbolThemeFontFamily}"
                  FontSize="{TemplateBinding GlyphSize}"
                  Foreground="{TemplateBinding GlyphBrush}"
                  IsHitTestVisible="False"
                  IsTextScaleFactorEnabled="False"
                  Text="{TemplateBinding CollapsedGlyph}"
                  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.CollapsedGlyphVisibility}" />
                <TextBlock
                  Width="12"
                  Height="12"
                  Padding="2"
                  VerticalAlignment="Center"
                  AutomationProperties.AccessibilityView="Raw"
                  FontFamily="{StaticResource SymbolThemeFontFamily}"
                  FontSize="{TemplateBinding GlyphSize}"
                  Foreground="{TemplateBinding GlyphBrush}"
                  IsHitTestVisible="False"
                  IsTextScaleFactorEnabled="False"
                  Text="{TemplateBinding ExpandedGlyph}"
                  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.ExpandedGlyphVisibility}" />
              </Grid>
              <ContentPresenter
                x:Name="ContentPresenter"
                Grid.Column="2"
                MinHeight="{ThemeResource TreeViewItemContentHeight}"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                ContentTransitions="{TemplateBinding ContentTransitions}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundPressed}" />
                    <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelected}" />
                    <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelected}" />
                    <Setter Target="SelectionIndicator.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundDisabled}" />
                    <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPointerOver}" />
                    <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedPointerOver}" />
                    <Setter Target="SelectionIndicator.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPressed}" />
                    <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedPressed}" />
                    <Setter Target="SelectionIndicator.Opacity" Value="1" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SelectedDisabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedDisabled}" />
                    <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedDisabled}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ReorderedPlaceholder">
                  <Storyboard>
                    <FadeOutThemeAnimation TargetName="MultiSelectGrid" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TreeViewMultiSelectStates">
                <VisualState x:Name="TreeViewMultiSelectDisabled" />
                <VisualState x:Name="TreeViewMultiSelectEnabledUnselected">
                  <VisualState.Setters>
                    <Setter Target="MultiSelectCheckBox.Visibility" Value="Visible" />
                    <Setter Target="ExpandCollapseChevron.Padding" Value="0,0,14,0" />
                    <Setter Target="ContentPresenterGrid.Padding" Value="0" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="TreeViewMultiSelectEnabledSelected">
                  <VisualState.Setters>
                    <Setter Target="MultiSelectCheckBox.Visibility" Value="Visible" />
                    <Setter Target="MultiSelectGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelected}" />
                    <Setter Target="ExpandCollapseChevron.Padding" Value="0,0,14,0" />
                    <Setter Target="ContentPresenterGrid.Padding" Value="0" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DragStates">
                <VisualState x:Name="NotDragging" />
                <VisualState x:Name="MultipleDraggingPrimary">
                  <VisualState.Setters>
                    <Setter Target="MultiSelectCheckBox.Opacity" Value="0" />
                    <Setter Target="MultiArrangeOverlayTextBorder.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
