<Page
  x:Class="NanaGet.MainPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="using:NanaGet"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">
  <Page.Resources>
    <local:TaskItemConverter x:Name="TaskItemConverter" />
  </Page.Resources>
  <Grid>
    <Grid x:Name="TaskManagerGrid">
      <Grid.RowDefinitions>
        <RowDefinition Height="auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="auto" />
      </Grid.RowDefinitions>
      <Grid Grid.Row="0" Height="44">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="44" />
          <ColumnDefinition Width="44" />
          <ColumnDefinition Width="44" />
          <ColumnDefinition Width="44" />
          <ColumnDefinition Width="44" />
        </Grid.ColumnDefinitions>
        <AutoSuggestBox
          x:Uid="/TaskManagerGrid/SearchBox"
          Grid.Column="0"
          Margin="4,0"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Center"
          PlaceholderText="[Search Downloads]"
          Text="{x:Bind SearchFilter, Mode=TwoWay}" />
        <Button
          x:Uid="/TaskManagerGrid/NewTaskButton"
          Grid.Column="1"
          Width="44"
          VerticalAlignment="Stretch"
          AutomationProperties.Name="[New Task Button]"
          Background="Transparent"
          BorderBrush="Transparent"
          Click="TaskManagerGridNewTaskButtonClick"
          ToolTipService.ToolTip="[New Task]">
          <Button.Content>
            <SymbolIcon Symbol="Add" />
          </Button.Content>
        </Button>
        <Button
          x:Uid="/TaskManagerGrid/StartAllButton"
          Grid.Column="2"
          Width="44"
          VerticalAlignment="Stretch"
          AutomationProperties.Name="[Start All Button]"
          Background="Transparent"
          BorderBrush="Transparent"
          Click="TaskManagerGridStartAllButtonClick"
          ToolTipService.ToolTip="[Start All]">
          <Button.Content>
            <SymbolIcon Symbol="Play" />
          </Button.Content>
        </Button>
        <Button
          x:Uid="/TaskManagerGrid/PauseAllButton"
          Grid.Column="3"
          Width="44"
          VerticalAlignment="Stretch"
          AutomationProperties.Name="[Pause All Button]"
          Background="Transparent"
          BorderBrush="Transparent"
          Click="TaskManagerGridPauseAllButtonClick"
          ToolTipService.ToolTip="[Pause All]">
          <Button.Content>
            <SymbolIcon Symbol="Pause" />
          </Button.Content>
        </Button>
        <Button
          x:Uid="/TaskManagerGrid/ClearListButton"
          Grid.Column="4"
          Width="44"
          VerticalAlignment="Stretch"
          AutomationProperties.Name="[Clear List Button]"
          Background="Transparent"
          BorderBrush="Transparent"
          Click="TaskManagerGridClearListButtonClick"
          ToolTipService.ToolTip="[Clear List]">
          <Button.Content>
            <SymbolIcon Symbol="Delete" />
          </Button.Content>
        </Button>
        <Button
          x:Uid="/TaskManagerGrid/MoreButton"
          Grid.Column="5"
          Width="44"
          VerticalAlignment="Stretch"
          AutomationProperties.Name="[More Button]"
          Background="Transparent"
          BorderBrush="Transparent"
          ToolTipService.ToolTip="[More]">
          <Button.Content>
            <SymbolIcon Symbol="More" />
          </Button.Content>
          <Button.Flyout>
            <MenuFlyout>
              <MenuFlyoutItem
                x:Uid="/TaskManagerGrid/OpenDownloadsFolderButton"
                Click="TaskManagerGridOpenDownloadsFolderButtonClick"
                Icon="Folder"
                Text="[Open Downloads Folder]" />
              <!--<MenuFlyoutItem
                x:Uid="/TaskManagerGrid/SettingsButton"
                Click="TaskManagerGridSettingsButtonClick"
                Icon="Setting"
                Text="[Settings]" />-->
              <MenuFlyoutItem
                x:Uid="/TaskManagerGrid/AboutButton"
                Click="TaskManagerGridAboutButtonClick"
                Icon="Help"
                Text="[About]" />
            </MenuFlyout>
          </Button.Flyout>
        </Button>
      </Grid>
      <ListView
        x:Name="TaskManagerGridTaskList"
        Grid.Row="1"
        ContainerContentChanging="TaskManagerGridTaskListContainerContentChanging">
        <ListView.ItemContainerStyle>
          <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="1,0" />
            <Setter Property="Margin" Value="-1,0,-1,-1" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="1" />
          </Style>
        </ListView.ItemContainerStyle>
        <ListView.ItemTemplate>
          <DataTemplate x:DataType="local:TaskItem">
            <Grid Height="44">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
              </Grid.ColumnDefinitions>
              <Grid
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="4*" />
                  <ColumnDefinition Width="6*" />
                  <ColumnDefinition Width="44" />
                  <ColumnDefinition Width="44" />
                </Grid.ColumnDefinitions>
                <TextBlock
                  Grid.Column="0"
                  Margin="12,0"
                  VerticalAlignment="Center"
                  Text="{x:Bind Name, Mode=OneWay}" />
                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                  <TextBlock Text="{x:Bind StatusText, Mode=OneWay}" />
                  <ProgressBar
                    Height="4"
                    BorderThickness="0"
                    Foreground="{x:Bind Status, Converter={StaticResource TaskItemConverter}, ConverterParameter=TaskStatusToProgressBarForegroundColor, Mode=OneWay}"
                    Maximum="{x:Bind TotalBytesToReceive, Converter={StaticResource TaskItemConverter}, ConverterParameter=UInt64ToDouble, Mode=OneWay}"
                    Value="{x:Bind BytesReceived, Converter={StaticResource TaskItemConverter}, ConverterParameter=UInt64ToDouble, Mode=OneWay}" />
                </StackPanel>
                <Button
                  x:Uid="/TaskManagerGrid/TaskItemRetryButton"
                  Grid.Column="2"
                  VerticalAlignment="Stretch"
                  AutomationProperties.Name="[Retry Button]"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  Click="TaskManagerGridTaskItemRetryButtonClick"
                  ToolTipService.ToolTip="[Retry]"
                  Visibility="{x:Bind Status, Converter={StaticResource TaskItemConverter}, ConverterParameter=TaskStatusToRetryButtonVisible, Mode=OneWay}">
                  <Button.Content>
                    <SymbolIcon Symbol="Refresh" />
                  </Button.Content>
                </Button>
                <Button
                  x:Uid="/TaskManagerGrid/TaskItemResumeButton"
                  Grid.Column="2"
                  VerticalAlignment="Stretch"
                  AutomationProperties.Name="[Resume Button]"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  Click="TaskManagerGridTaskItemResumeButtonClick"
                  ToolTipService.ToolTip="[Resume]"
                  Visibility="{x:Bind Status, Converter={StaticResource TaskItemConverter}, ConverterParameter=TaskStatusToResumeButtonVisible, Mode=OneWay}">
                  <Button.Content>
                    <SymbolIcon Symbol="Play" />
                  </Button.Content>
                </Button>
                <Button
                  x:Uid="/TaskManagerGrid/TaskItemPauseButton"
                  Grid.Column="2"
                  VerticalAlignment="Stretch"
                  AutomationProperties.Name="[Pause Button]"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  Click="TaskManagerGridTaskItemPauseButtonClick"
                  ToolTipService.ToolTip="[Pause]"
                  Visibility="{x:Bind Status, Converter={StaticResource TaskItemConverter}, ConverterParameter=TaskStatusToPauseButtonVisible, Mode=OneWay}">
                  <Button.Content>
                    <SymbolIcon Symbol="Pause" />
                  </Button.Content>
                </Button>
                <Button
                  x:Uid="/TaskManagerGrid/TaskItemMoreButton"
                  Grid.Column="3"
                  VerticalAlignment="Stretch"
                  AutomationProperties.Name="[More Button]"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  ToolTipService.ToolTip="[More]">
                  <Button.Content>
                    <SymbolIcon Symbol="More" />
                  </Button.Content>
                  <Button.Flyout>
                    <MenuFlyout>
                      <MenuFlyoutItem
                        x:Uid="/TaskManagerGrid/TaskItemCopyLinkButton"
                        Click="TaskManagerGridTaskItemCopyLinkButtonClick"
                        Icon="Link"
                        Text="[Copy Link]" />
                      <!--<MenuFlyoutItem
                        x:Uid="/TaskManagerGrid/TaskItemOpenFolderButton"
                        Click="TaskManagerGridTaskItemOpenFolderButtonClick"
                        Icon="OpenLocal"
                        Text="[Open Folder]" />-->
                      <MenuFlyoutItem
                        x:Uid="/TaskManagerGrid/TaskItemCancelButton"
                        Click="TaskManagerGridTaskItemCancelButtonClick"
                        Icon="Cancel"
                        Text="[Cancel]"
                        Visibility="{x:Bind Status, Converter={StaticResource TaskItemConverter}, ConverterParameter=TaskStatusToCancelButtonVisible, Mode=OneWay}" />
                      <MenuFlyoutItem
                        x:Uid="/TaskManagerGrid/TaskItemRemoveButton"
                        Click="TaskManagerGridTaskItemRemoveButtonClick"
                        Icon="Delete"
                        Text="[Remove]"
                        Visibility="{x:Bind Status, Converter={StaticResource TaskItemConverter}, ConverterParameter=TaskStatusToRemoveButtonVisible, Mode=OneWay}" />
                    </MenuFlyout>
                  </Button.Flyout>
                </Button>
              </Grid>
            </Grid>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>
      <TextBlock
        x:Name="TaskManagerGridTaskListNoItemsTextBlock"
        x:Uid="/TaskManagerGrid/TaskListNoItemsTextBlock"
        Grid.Row="1"
        Margin="16"
        Text="[No Downloads]"
        TextAlignment="Center" />
      <TextBlock
        x:Name="TaskManagerGridGlobalStatusTextBlock"
        Grid.Row="2"
        Height="32"
        Padding="4"
        VerticalAlignment="Bottom"
        FontSize="15"
        Text="&#x2193; 0 Byte/s &#x2191; 0 Byte/s" />
    </Grid>
    <!--<Grid
      x:Name="SettingsGrid"
      Background="{ThemeResource SystemControlPageBackgroundMediumAltMediumBrush}"
      Visibility="Collapsed">
      <Border
        Padding="12"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Background="{ThemeResource SystemControlPageBackgroundAltHighBrush}"
        BorderBrush="{ThemeResource SystemControlBackgroundBaseLowBrush}"
        BorderThickness="2">
        <StackPanel>
          <TextBlock
            x:Uid="/SettingsGrid/GridTitleTextBlock"
            Margin="0,0,0,12"
            FontSize="20"
            Text="[Settings]" />
          <ScrollViewer
            MinWidth="300"
            MaxHeight="200"
            Margin="-12,0"
            Padding="12,0">
            <StackPanel Orientation="Vertical">
              <TextBlock
                x:Uid="/SettingsGrid/DefaultDownloadFolderTitle"
                FontSize="16"
                Text="[Default download folder]" />
              <CheckBox
                x:Name="SettingsGridUseCustomFolderCheckBox"
                x:Uid="/SettingsGrid/UseCustomFolderCheckBox"
                Content="[Use custom folder instead of last used folder]" />
              <TextBox
                x:Name="SettingsGridCustomDownloadFolderCheckBox"
                IsReadOnly="True"
                PlaceholderText="N/A" />
              <Button
                x:Uid="/SettingsGrid/CustomDownloadFolderBrowseButton"
                Margin="0,4"
                HorizontalAlignment="Right"
                Click="SettingsGridCustomDownloadFolderBrowseButtonClick"
                Content="[Browse to modify]"
                IsEnabled="False" />
            </StackPanel>
          </ScrollViewer>
          <StackPanel
            Margin="0,12,0,0"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
              x:Uid="/SettingsGrid/ApplyButton"
              Margin="0,0,6,0"
              Click="SettingsGridApplyButtonClick"
              Content="[Apply]" />
            <Button
              x:Uid="/SettingsGrid/CancelButton"
              Margin="6,0,0,0"
              Click="SettingsGridCancelButtonClick"
              Content="[Cancel]" />
          </StackPanel>
        </StackPanel>
      </Border>
    </Grid>-->
  </Grid>
</Page>
